/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Staker, StakerInterface } from "../Staker";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "depositTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "depositedAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lastDeposited",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenAddress",
    outputs: [
      {
        internalType: "contract USDC",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "treasuryAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200127738038062001277833981810160405281019062000037919062000182565b620000576200004b6200009f60201b60201c565b620000a760201b60201c565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050620001fc565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000815190506200017c81620001e2565b92915050565b6000602082840312156200019557600080fd5b6000620001a5848285016200016b565b91505092915050565b6000620001bb82620001c2565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b620001ed81620001ae565b8114620001f957600080fd5b50565b61106b806200020c6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80638da5cb5b116100665780638da5cb5b1461010c5780639d76ea581461012a578063a574dc4d14610148578063dd49756e14610178578063f2fde38b1461019457610093565b8063315a095d14610098578063368acb09146100b45780634a4643f7146100d2578063715018a614610102575b600080fd5b6100b260048036038101906100ad9190610a19565b6101b0565b005b6100bc6103ca565b6040516100c99190610ca6565b60405180910390f35b6100ec60048036038101906100e791906109c7565b6103d0565b6040516100f99190610ca6565b60405180910390f35b61010a6103e8565b005b610114610470565b6040516101219190610b47565b60405180910390f35b610132610499565b60405161013f9190610beb565b60405180910390f35b610162600480360381019061015d91906109c7565b6104bf565b60405161016f9190610ca6565b60405180910390f35b610192600480360381019061018d9190610a19565b6104d7565b005b6101ae60048036038101906101a991906109c7565b61076d565b005b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610232576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022990610c86565b60405180910390fd5b611c20600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054426102809190610db3565b10156102c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102b890610c46565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161031e929190610bc2565b602060405180830381600087803b15801561033857600080fd5b505af115801561034c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061037091906109f0565b5080600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546103c09190610db3565b9250508190555050565b60025481565b60046020528060005260406000206000915090505481565b6103f0610865565b73ffffffffffffffffffffffffffffffffffffffff1661040e610470565b73ffffffffffffffffffffffffffffffffffffffff1614610464576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045b90610c66565b60405180910390fd5b61046e600061086d565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60036020528060005260406000206000915090505481565b80600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401610535929190610b62565b60206040518083038186803b15801561054d57600080fd5b505afa158015610561573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105859190610a42565b10156105c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105bd90610c06565b60405180910390fd5b60006105f06103e86105e260028561093190919063ffffffff16565b61094790919063ffffffff16565b905080600260008282546106049190610cd2565b9250508190555042600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610662818361095d90919063ffffffff16565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106b09190610cd2565b92505081905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161071693929190610b8b565b602060405180830381600087803b15801561073057600080fd5b505af1158015610744573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076891906109f0565b505050565b610775610865565b73ffffffffffffffffffffffffffffffffffffffff16610793610470565b73ffffffffffffffffffffffffffffffffffffffff16146107e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e090610c66565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610859576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085090610c26565b60405180910390fd5b6108628161086d565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000818361093f9190610d59565b905092915050565b600081836109559190610d28565b905092915050565b6000818361096b9190610db3565b905092915050565b60008135905061098281610ff0565b92915050565b60008151905061099781611007565b92915050565b6000813590506109ac8161101e565b92915050565b6000815190506109c18161101e565b92915050565b6000602082840312156109d957600080fd5b60006109e784828501610973565b91505092915050565b600060208284031215610a0257600080fd5b6000610a1084828501610988565b91505092915050565b600060208284031215610a2b57600080fd5b6000610a398482850161099d565b91505092915050565b600060208284031215610a5457600080fd5b6000610a62848285016109b2565b91505092915050565b610a7481610de7565b82525050565b610a8381610e2f565b82525050565b6000610a96602383610cc1565b9150610aa182610eb1565b604082019050919050565b6000610ab9602683610cc1565b9150610ac482610f00565b604082019050919050565b6000610adc602683610cc1565b9150610ae782610f4f565b604082019050919050565b6000610aff602083610cc1565b9150610b0a82610f9e565b602082019050919050565b6000610b22601c83610cc1565b9150610b2d82610fc7565b602082019050919050565b610b4181610e25565b82525050565b6000602082019050610b5c6000830184610a6b565b92915050565b6000604082019050610b776000830185610a6b565b610b846020830184610a6b565b9392505050565b6000606082019050610ba06000830186610a6b565b610bad6020830185610a6b565b610bba6040830184610b38565b949350505050565b6000604082019050610bd76000830185610a6b565b610be46020830184610b38565b9392505050565b6000602082019050610c006000830184610a7a565b92915050565b60006020820190508181036000830152610c1f81610a89565b9050919050565b60006020820190508181036000830152610c3f81610aac565b9050919050565b60006020820190508181036000830152610c5f81610acf565b9050919050565b60006020820190508181036000830152610c7f81610af2565b9050919050565b60006020820190508181036000830152610c9f81610b15565b9050919050565b6000602082019050610cbb6000830184610b38565b92915050565b600082825260208201905092915050565b6000610cdd82610e25565b9150610ce883610e25565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d1d57610d1c610e53565b5b828201905092915050565b6000610d3382610e25565b9150610d3e83610e25565b925082610d4e57610d4d610e82565b5b828204905092915050565b6000610d6482610e25565b9150610d6f83610e25565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610da857610da7610e53565b5b828202905092915050565b6000610dbe82610e25565b9150610dc983610e25565b925082821015610ddc57610ddb610e53565b5b828203905092915050565b6000610df282610e05565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610e3a82610e41565b9050919050565b6000610e4c82610e05565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f546f6b656e732077657265206e6f7420616c6c6f77656420746f20626520737060008201527f656e740000000000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f416c6c6f77656420746f207769746864726177206f6e6c79206166746572203260008201527f20686f7572730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f496e73756666696369656e742066756e6473206465706f736974656400000000600082015250565b610ff981610de7565b811461100457600080fd5b50565b61101081610df9565b811461101b57600080fd5b50565b61102781610e25565b811461103257600080fd5b5056fea2646970667358221220f6e0bff8c6edfa52e14648919bc1c38285657b45d394c6f142c83c8662936c8564736f6c63430008030033";

export class Staker__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _tokenAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Staker> {
    return super.deploy(_tokenAddress, overrides || {}) as Promise<Staker>;
  }
  getDeployTransaction(
    _tokenAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_tokenAddress, overrides || {});
  }
  attach(address: string): Staker {
    return super.attach(address) as Staker;
  }
  connect(signer: Signer): Staker__factory {
    return super.connect(signer) as Staker__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakerInterface {
    return new utils.Interface(_abi) as StakerInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Staker {
    return new Contract(address, _abi, signerOrProvider) as Staker;
  }
}
