/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { USDC, USDCInterface } from "../USDC";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "initialSupply",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "freeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200205f3803806200205f833981810160405281019062000037919062000441565b6040518060400160405280600e81526020017f55534420537461626c65636f696e0000000000000000000000000000000000008152506040518060400160405280600481526020017f5553444300000000000000000000000000000000000000000000000000000000815250620000c3620000b76200012a60201b60201c565b6200013260201b60201c565b60008060146101000a81548160ff0219169083151502179055508160049080519060200190620000f59291906200037a565b5080600590805190602001906200010e9291906200037a565b505050620001233382620001f660201b60201c565b5062000633565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141562000269576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200026090620004a5565b60405180910390fd5b6200027d600083836200037060201b60201c565b8060036000828254620002919190620004f5565b9250508190555080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254620002e99190620004f5565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620003509190620004c7565b60405180910390a36200036c600083836200037560201b60201c565b5050565b505050565b505050565b82805462000388906200055c565b90600052602060002090601f016020900481019282620003ac5760008555620003f8565b82601f10620003c757805160ff1916838001178555620003f8565b82800160010185558215620003f8579182015b82811115620003f7578251825591602001919060010190620003da565b5b5090506200040791906200040b565b5090565b5b80821115620004265760008160009055506001016200040c565b5090565b6000815190506200043b8162000619565b92915050565b6000602082840312156200045457600080fd5b600062000464848285016200042a565b91505092915050565b60006200047c601f83620004e4565b91506200048982620005f0565b602082019050919050565b6200049f8162000552565b82525050565b60006020820190508181036000830152620004c0816200046d565b9050919050565b6000602082019050620004de600083018462000494565b92915050565b600082825260208201905092915050565b6000620005028262000552565b91506200050f8362000552565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111562000547576200054662000592565b5b828201905092915050565b6000819050919050565b600060028204905060018216806200057557607f821691505b602082108114156200058c576200058b620005c1565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b620006248162000552565b81146200063057600080fd5b50565b611a1c80620006436000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063715018a611610097578063a457c2d711610066578063a457c2d71461029f578063a9059cbb146102cf578063dd62ed3e146102ff578063f2fde38b1461032f57610100565b8063715018a61461023d5780637c928fe9146102475780638da5cb5b1461026357806395d89b411461028157610100565b8063313ce567116100d3578063313ce567146101a157806339509351146101bf5780635c975abb146101ef57806370a082311461020d57610100565b806306fdde0314610105578063095ea7b31461012357806318160ddd1461015357806323b872dd14610171575b600080fd5b61010d61034b565b60405161011a91906113bb565b60405180910390f35b61013d6004803603810190610138919061114d565b6103dd565b60405161014a91906113a0565b60405180910390f35b61015b6103fb565b604051610168919061151d565b60405180910390f35b61018b600480360381019061018691906110fe565b610405565b60405161019891906113a0565b60405180910390f35b6101a96104fd565b6040516101b69190611538565b60405180910390f35b6101d960048036038101906101d4919061114d565b610506565b6040516101e691906113a0565b60405180910390f35b6101f76105b2565b60405161020491906113a0565b60405180910390f35b61022760048036038101906102229190611099565b6105c8565b604051610234919061151d565b60405180910390f35b610245610611565b005b610261600480360381019061025c9190611189565b610699565b005b61026b6106a6565b6040516102789190611385565b60405180910390f35b6102896106cf565b60405161029691906113bb565b60405180910390f35b6102b960048036038101906102b4919061114d565b610761565b6040516102c691906113a0565b60405180910390f35b6102e960048036038101906102e4919061114d565b61084c565b6040516102f691906113a0565b60405180910390f35b610319600480360381019061031491906110c2565b61086a565b604051610326919061151d565b60405180910390f35b61034960048036038101906103449190611099565b6108f1565b005b60606004805461035a9061164d565b80601f01602080910402602001604051908101604052809291908181526020018280546103869061164d565b80156103d35780601f106103a8576101008083540402835291602001916103d3565b820191906000526020600020905b8154815290600101906020018083116103b657829003601f168201915b5050505050905090565b60006103f16103ea6109e9565b84846109f1565b6001905092915050565b6000600354905090565b6000610412848484610bbc565b6000600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061045d6109e9565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050828110156104dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d49061145d565b60405180910390fd5b6104f1856104e96109e9565b8584036109f1565b60019150509392505050565b60006012905090565b60006105a86105136109e9565b8484600260006105216109e9565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546105a3919061156f565b6109f1565b6001905092915050565b60008060149054906101000a900460ff16905090565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6106196109e9565b73ffffffffffffffffffffffffffffffffffffffff166106376106a6565b73ffffffffffffffffffffffffffffffffffffffff161461068d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106849061147d565b60405180910390fd5b6106976000610e40565b565b6106a33382610f04565b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600580546106de9061164d565b80601f016020809104026020016040519081016040528092919081815260200182805461070a9061164d565b80156107575780601f1061072c57610100808354040283529160200191610757565b820191906000526020600020905b81548152906001019060200180831161073a57829003601f168201915b5050505050905090565b600080600260006107706109e9565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508281101561082d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610824906114dd565b60405180910390fd5b6108416108386109e9565b858584036109f1565b600191505092915050565b60006108606108596109e9565b8484610bbc565b6001905092915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6108f96109e9565b73ffffffffffffffffffffffffffffffffffffffff166109176106a6565b73ffffffffffffffffffffffffffffffffffffffff161461096d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109649061147d565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156109dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109d4906113fd565b60405180910390fd5b6109e681610e40565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a61576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a58906114bd565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ad1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ac89061141d565b60405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610baf919061151d565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610c2c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c239061149d565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c9c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c93906113dd565b60405180910390fd5b610ca7838383611065565b6000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610d2e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d259061143d565b60405180910390fd5b818103600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610dc3919061156f565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610e27919061151d565b60405180910390a3610e3a84848461106a565b50505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610f74576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f6b906114fd565b60405180910390fd5b610f8060008383611065565b8060036000828254610f92919061156f565b9250508190555080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610fe8919061156f565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161104d919061151d565b60405180910390a36110616000838361106a565b5050565b505050565b505050565b60008135905061107e816119b8565b92915050565b600081359050611093816119cf565b92915050565b6000602082840312156110ab57600080fd5b60006110b98482850161106f565b91505092915050565b600080604083850312156110d557600080fd5b60006110e38582860161106f565b92505060206110f48582860161106f565b9150509250929050565b60008060006060848603121561111357600080fd5b60006111218682870161106f565b93505060206111328682870161106f565b925050604061114386828701611084565b9150509250925092565b6000806040838503121561116057600080fd5b600061116e8582860161106f565b925050602061117f85828601611084565b9150509250929050565b60006020828403121561119b57600080fd5b60006111a984828501611084565b91505092915050565b6111bb816115c5565b82525050565b6111ca816115d7565b82525050565b60006111db82611553565b6111e5818561155e565b93506111f581856020860161161a565b6111fe816116dd565b840191505092915050565b600061121660238361155e565b9150611221826116ee565b604082019050919050565b600061123960268361155e565b91506112448261173d565b604082019050919050565b600061125c60228361155e565b91506112678261178c565b604082019050919050565b600061127f60268361155e565b915061128a826117db565b604082019050919050565b60006112a260288361155e565b91506112ad8261182a565b604082019050919050565b60006112c560208361155e565b91506112d082611879565b602082019050919050565b60006112e860258361155e565b91506112f3826118a2565b604082019050919050565b600061130b60248361155e565b9150611316826118f1565b604082019050919050565b600061132e60258361155e565b915061133982611940565b604082019050919050565b6000611351601f8361155e565b915061135c8261198f565b602082019050919050565b61137081611603565b82525050565b61137f8161160d565b82525050565b600060208201905061139a60008301846111b2565b92915050565b60006020820190506113b560008301846111c1565b92915050565b600060208201905081810360008301526113d581846111d0565b905092915050565b600060208201905081810360008301526113f681611209565b9050919050565b600060208201905081810360008301526114168161122c565b9050919050565b600060208201905081810360008301526114368161124f565b9050919050565b6000602082019050818103600083015261145681611272565b9050919050565b6000602082019050818103600083015261147681611295565b9050919050565b60006020820190508181036000830152611496816112b8565b9050919050565b600060208201905081810360008301526114b6816112db565b9050919050565b600060208201905081810360008301526114d6816112fe565b9050919050565b600060208201905081810360008301526114f681611321565b9050919050565b6000602082019050818103600083015261151681611344565b9050919050565b60006020820190506115326000830184611367565b92915050565b600060208201905061154d6000830184611376565b92915050565b600081519050919050565b600082825260208201905092915050565b600061157a82611603565b915061158583611603565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156115ba576115b961167f565b5b828201905092915050565b60006115d0826115e3565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b8381101561163857808201518184015260208101905061161d565b83811115611647576000848401525b50505050565b6000600282049050600182168061166557607f821691505b60208210811415611679576116786116ae565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206160008201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6119c1816115c5565b81146119cc57600080fd5b50565b6119d881611603565b81146119e357600080fd5b5056fea264697066735822122071113633c8ac16e00b507a8e7122ab962459a5fb6bd61e69cd706f240fe4996d64736f6c63430008030033";

export class USDC__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    initialSupply: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<USDC> {
    return super.deploy(initialSupply, overrides || {}) as Promise<USDC>;
  }
  getDeployTransaction(
    initialSupply: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(initialSupply, overrides || {});
  }
  attach(address: string): USDC {
    return super.attach(address) as USDC;
  }
  connect(signer: Signer): USDC__factory {
    return super.connect(signer) as USDC__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): USDCInterface {
    return new utils.Interface(_abi) as USDCInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): USDC {
    return new Contract(address, _abi, signerOrProvider) as USDC;
  }
}
